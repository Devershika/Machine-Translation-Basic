#Libraries
!pip install fsspec==2023.9.2 sacrebleu evaluate rouge_score -qq

import pandas as pd
import numpy as np
import transformers
import torch
import evaluate
import sacrebleu
import torch.nn as nn
import torch.optim as optim
from torch.utils.data import Dataset, DataLoader
from datasets import load_dataset

ds = load_dataset("cfilt/iitb-english-hindi")

def df_splits(dataset,split):
  df = pd.json_normalize(dataset[split])
  return df

df_train = df_splits(ds,'train')
df_test = df_splits(ds,'test')
df_val = df_splits(ds,'validation')

df = pd.concat([df_train,df_test,df_val])
df = df[:10000]

df.head()

def tokenize(text):
  return text.lower().split()

df['en.tokens'] = df['translation.en'].apply(tokenize)
df['hi.tokens'] = df['translation.hi'].apply(tokenize)

from typing import Counter
def build_vocab(tokens):
  counter = Counter()
  for token in tokens:
    counter.update(token)
  vocab = {'<pad>':0,'<sos>':1,'<eos>':2,'<unk>':3}
  for word in counter:
    vocab[word] = len(vocab)
  return vocab

eng_vocab = build_vocab(df['en.tokens'])
hin_vocab = build_vocab(df['hi.tokens'])

len(eng_vocab),len(hin_vocab)
